# This is a basic workflow to help you get started with Actions

name: API dev environment

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [develop]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Notify build started
        env:
          DISCORD_WEBHOOK: ${{secrets.DISCORD_WEBHOOK_URL}}
        uses: Ilshidur/action-discord@master
        with:
          args: "Uma nova build da **API dev** foi iniciada."

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Uses the NodeJS actions
      - uses: actions/setup-node@v1.1.0
        with:
          version: 12.x

      - name: Install dependencies
        run: |
          npm install

      - name: Build NestJS application
        run: npm run build

      # Install dependencies
      - name: Stop API
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DEV }}
          username: root
          key: ${{secrets.DEPLOY_KEY_DEV}}
          port: 22
          script_stop: false
          script: |
            pm2 stop api

      # Deploy to VM
      - name: VM SYNC
        uses: Pendect/action-rsyncer@v1.1.0
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY_DEV }}
        with:
          src: /
          options: '--exclude /.git/ \
          --exclude /.github/ \
          --exclude /node_modules/ \'
          dest: root@${{ secrets.HOST_DEV }}:/root/rool-api/

      # Install dependencies
      - name: Install VM dependencies
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DEV }}
          username: root
          key: ${{secrets.DEPLOY_KEY_DEV}}
          port: 22
          script_stop: false
          script: |
            cd /root/rool-api/
            yarn --ignore-engines

      # Setup config and restart pm2 process
      - name: Config and restart API
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DEV }}
          username: root
          key: ${{ secrets.DEPLOY_KEY_DEV }}
          port: 22
          script_stop: true
          script: |
            cd /root/rool-api/
            echo "NODE_ENV=${{ secrets.NODE_ENV_DEV }}" >> .env
            echo "PORT=${{ secrets.PORT_DEV }}" >> .env
            echo "DB_HOST=${{ secrets.DB_HOST_DEV }}" >> .env
            echo "DB_USER=${{ secrets.DB_PORT_DEV }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_DATABASE_DEV }}" >> .env
            echo "DB_DATABASE=${{ secrets.DB_USERNAME_DEV }}" >> .env
            echo "DB_PORT=${{ secrets.DB_PASSWORD_DEV }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET_DEV }}" >> .env
            echo "JWT_EXPIRE=${{ secrets.JWT_EXPIRE_DEV }}" >> .env
            echo "RE_SECRET=${{ secrets.RE_SECRET_DEV }}" >> .env
            pm2 restart api

      - name: Notify build end
        env:
          DISCORD_WEBHOOK: https://discordapp.com/api/webhooks/700510117707382794/3cSoOtvJAvWeifHt-gYvQN0x4A4JclEEIPDhDmTmBYB-OKyMwQi9UetWTByz_nJqD4TG
        uses: Ilshidur/action-discord@master
        with:
          args: "A build do **emulator dev** foi finalizado."
